{
  "contractName": "ETHFlexClub",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_flexNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumWaitBlocks",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "NFTMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINIMUM_WAIT_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "flexNFTContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "mintNFT",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getFlexNFTAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDepositBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMinimumWaitBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_flexNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumWaitBlocks\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NFTMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_WAIT_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flexNFTContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlexNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumWaitBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes32)\":{\"details\":\"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.\",\"params\":{\"_commitment\":\"the note commitment, which is PedersenHash(nullifier + secret)\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"mintNFT(bytes,bytes32,bytes32,address,address,uint256,uint256)\":{\"details\":\"mintNFT mints flex NFT from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\"},\"withdraw()\":{\"details\":\"Withdraw a deposit from the contract. A wait time is enforced to prevent flash loans. \"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/ETHFlexClub.sol\":\"ETHFlexClub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/ETHFlexClub.sol\":{\"keccak256\":\"0x4fa3a6085fb0567d37074034118419192a581a61ae7275195217c934394790df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://739687620404e04b8e3e3006211bed129a038ea1da5c4c3ec080deb8d390a89d\",\"dweb:/ipfs/QmfWtTwJvjHetsZYNggb6UDvnoVc3j3ar4axeRrDcTw2Km\"]},\"/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/FlexClub.sol\":{\"keccak256\":\"0x20e287fe7ba4221574939a65ef147c0f53e69a92516dfd1b883ed71eb817853e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd58491fe520ab79af1d9d051c2fd70ea26dfd0f03edca6d0d7fed0b085a082\",\"dweb:/ipfs/QmfFGzeLz233QwwGhPH2e1srb1FRHLFkjNc9r7v8Quf3s9\"]},\"/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/FlexNFT.sol\":{\"keccak256\":\"0xa77ec020453073f1de10b889fec27ac5a127497fbe8f64d6ffd8c7a405844566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517023031409b4b17770a384de7fbbd7388fe5de0c7161b540fe24239e969722\",\"dweb:/ipfs/QmPXQbuhFw7TSFZYbRuXSn5UzddkwfNDBQkrYmsMfPtxZv\"]},\"/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x13ab1ee963f427b843baf6d0c1ef04db7c4dbea2a27b59f584e4433235b59a1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8c5ca76ea199d5228c739db25600b51fc540ea63089c9bb9aa65a85088f55df\",\"dweb:/ipfs/QmNq3znvEBj7arHLXfysiQRiLCRCaaHcg6c881PysFvvCu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x118ed7540f56b21ff92e21ebaa73584048e98d2ac04ca67571329bb8dbd9032f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da2918b7aff73dd51d41bfcfa548f81eb50531b8353500fdbdacf297076db070\",\"dweb:/ipfs/Qmb8ixAs1vBjZRowQNuNg6bRf2NZmgZ1JTBxmQS14PHpcL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x4b087f06b6670a131a5a14e53b1d2a5ef19c034cc5ec42eeebcf9554325744ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6a6af5d848334e40db419773f6360601e311ffc21c2e274f730b8c542da99fd\",\"dweb:/ipfs/QmfA24cxQ2g41ZWUuDF295dxDJ4xF1bSDYtC3EaLd7CzW8\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa1e12f97981f1d0964b1c048978606a57127c56c438bab61cdfe269cad859a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eefac1760f524971e14aa3f3d79515a3d54fd28c1d3bdca0b36127da349b830\",\"dweb:/ipfs/QmUMzkyH3ytJX5gVPizQruNLhkKmuJb3nFqBDad4LPdg5U\"]}},\"version\":1}",
  "bytecode": "0x60e0604052600380546001600160401b03191690553480156200002157600080fd5b50604051620024ec380380620024ec833981810160405260c08110156200004757600080fd5b508051602082015160408301516060840151608085015160a090950151939492939192909185858585808363ffffffff8216620000b65760405162461bcd60e51b8152600401808060200182810382526023815260200180620024c96023913960400191505060405180910390fd5b60208263ffffffff161062000112576040805162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015290519081900360640190fd5b6000805463ffffffff191663ffffffff8416178155606082901b6001600160601b0319166080525b8263ffffffff168163ffffffff16101562000183576200016063ffffffff82166200029e565b63ffffffff8216600090815260016020819052604090912091909155016200013a565b506200019963ffffffff6000198401166200029e565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b555050600160045581620002095760405162461bcd60e51b8152600401808060200182810382526025815260200180620024a46025913960400191505060405180910390fd5b5060609290921b6001600160601b03191660a05250600555600880546001600160a01b0319166001600160a01b038416179055806200028f576040805162461bcd60e51b815260206004820152601460248201527f7a65726f206d696e207761697420626c6f636b73000000000000000000000000604482015290519081900360640190fd5b60c052506200092c9350505050565b600081620002ce57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c62000927565b81600114156200030057507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d62000927565b81600214156200033257507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20062000927565b81600314156200036457507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb62000927565b81600414156200039657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c962000927565b8160051415620003c857507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495962000927565b8160061415620003fa57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c62000927565b81600714156200042c57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb462000927565b81600814156200045e57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8062000927565b81600914156200048f57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00762000927565b81600a1415620004c157507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3062000927565b81600b1415620004f357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e562000927565b81600c14156200052557507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f62000927565b81600d14156200055757507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd62000927565b81600e14156200058957507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10862000927565b81600f1415620005bb57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b662000927565b8160101415620005ed57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185462000927565b81601114156200061f57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea62000927565b81601214156200065157507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d62000927565b81601314156200068357507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0562000927565b8160141415620006b557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d462000927565b8160151415620006e757507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296762000927565b81601614156200071957507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345362000927565b81601714156200074b57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4862000927565b81601814156200077d57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd162000927565b8160191415620007af57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c62000927565b81601a1415620007e157507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9962000927565b81601b14156200081357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35462000927565b81601c14156200084457507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d62000927565b81601d14156200087657507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42762000927565b81601e1415620008a857507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb62000927565b81601f1415620008da57507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc62000927565b6040805162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015290519081900360640190fd5b919050565b60805160601c60a05160601c60c051611b366200096e600039806107645280610e24528061156652508061068e5250806114ab52806118025250611b366000f3fe6080604052600436106101b75760003560e01c80639b257237116100ec578063e5285dcc1161008a578063ec73295911610064578063ec732959146105fb578063ed33639f14610610578063f178e47c14610625578063fc7e9c6f1461064f576101b7565b8063e5285dcc14610592578063e64cb05b146105bc578063e8295588146105d1576101b7565b8063ba70f757116100c6578063ba70f75714610529578063bcd592611461053e578063c2b40ae414610553578063cd87a3b41461057d576101b7565b80639b257237146103a85780639fa12d0b14610441578063b214faa51461050c576101b7565b80636cd568991161015957806383efc5901161013357806383efc5901461032a5780638bca6d161461033f5780638ea3099e1461035457806390eeb02b14610393576101b7565b80636cd56899146102c15780636d9833e3146102d6578063839df94514610300576101b7565b80633ccfd60b116101955780633ccfd60b14610252578063414a37ba1461026957806341fcfac91461027e5780634ecf518b14610293576101b7565b806312065fe0146101bc57806317cc915c146101e35780632b7ac3f314610221575b600080fd5b3480156101c857600080fd5b506101d1610664565b60408051918252519081900360200190f35b3480156101ef57600080fd5b5061020d6004803603602081101561020657600080fd5b5035610677565b604080519115158252519081900360200190f35b34801561022d57600080fd5b5061023661068c565b604080516001600160a01b039092168252519081900360200190f35b34801561025e57600080fd5b506102676106b0565b005b34801561027557600080fd5b506101d1610750565b34801561028a57600080fd5b506101d1610762565b34801561029f57600080fd5b506102a8610786565b6040805163ffffffff9092168252519081900360200190f35b3480156102cd57600080fd5b50610236610792565b3480156102e257600080fd5b5061020d600480360360208110156102f957600080fd5b50356107a1565b34801561030c57600080fd5b5061020d6004803603602081101561032357600080fd5b5035610813565b34801561033657600080fd5b50610236610828565b34801561034b57600080fd5b506101d1610837565b34801561036057600080fd5b506101d16004803603606081101561037757600080fd5b506001600160a01b03813516906020810135906040013561083d565b34801561039f57600080fd5b506102a8610a09565b610267600480360360e08110156103be57600080fd5b810190602081018135600160201b8111156103d857600080fd5b8201836020820111156103ea57600080fd5b803590602001918460018302840111600160201b8311171561040b57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610a15565b34801561044d57600080fd5b506104bc6004803603602081101561046457600080fd5b810190602081018135600160201b81111561047e57600080fd5b82018360208201111561049057600080fd5b803590602001918460208302840111600160201b831117156104b157600080fd5b509092509050610c08565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104f85781810151838201526020016104e0565b505050509050019250505060405180910390f35b6102676004803603602081101561052257600080fd5b5035610ca7565b34801561053557600080fd5b506101d1610dc8565b34801561054a57600080fd5b506101d1610de3565b34801561055f57600080fd5b506101d16004803603602081101561057657600080fd5b5035610df6565b34801561058957600080fd5b506102a8610e08565b34801561059e57600080fd5b5061020d600480360360208110156105b557600080fd5b5035610e0d565b3480156105c857600080fd5b506101d1610e22565b3480156105dd57600080fd5b506101d1600480360360208110156105f457600080fd5b5035610e46565b34801561060757600080fd5b506101d1611485565b34801561061c57600080fd5b506102366114a9565b34801561063157600080fd5b506101d16004803603602081101561064857600080fd5b50356114cd565b34801561065b57600080fd5b506102a86114df565b3360009081526009602052604090205490565b60066020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026004541415610708576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600455610716336114f2565b6040805133815290517fe19ed71156e31b3c9e18ac7ad8d1b79f0a0feb3be18d23dae612e52040aada4b9181900360200190a16001600455565b600080516020611a3683398151915281565b7f000000000000000000000000000000000000000000000000000000000000000090565b60005463ffffffff1681565b6008546001600160a01b031681565b6000816107b05750600061080e565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156107e35760019250505061080e565b63ffffffff81166107f25750601e5b6000190163ffffffff80821690831614156107bb576000925050505b919050565b60076020526000908152604090205460ff1681565b6008546001600160a01b031690565b60055481565b6000600080516020611a3683398151915283106108a1576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020611a3683398151915282106108ed5760405162461bcd60e51b8152600401808060200182810382526021815260200180611a156021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b15801561093c57600080fd5b505afa158015610950573d6000803e3d6000fd5b505050506040513d604081101561096657600080fd5b5080516020909101519092509050600080516020611a368339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156109d357600080fd5b505afa1580156109e7573d6000803e3d6000fd5b505050506040513d60408110156109fd57600080fd5b50519695505050505050565b60035463ffffffff1681565b60026004541415610a6d576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600455600554821115610ac9576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526006602052604090205460ff1615610b2d576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b610b36866107a1565b610b87576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b6000858152600660205260409020805460ff19166001179055610bab848484611685565b604080516001600160a01b038681168252602082018890528183018590529151918516917f34442074d74b17ccf0e7c1c7cd35089bb0c6e520f6331ce5e77a543fc69665569181900360600190a250506001600455505050505050565b60608167ffffffffffffffff81118015610c2157600080fd5b50604051908082528060200260200182016040528015610c4b578160200160208202803683370190505b50905060005b82811015610ca057610c74848483818110610c6857fe5b90506020020135610e0d565b15610c98576001828281518110610c8757fe5b911515602092830291909101909101525b600101610c51565b5092915050565b60026004541415610cff576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260045560008181526007602052604090205460ff1615610d525760405162461bcd60e51b8152600401808060200182810382526021815260200180611a566021913960400191505060405180910390fd5b6000610d5d82611730565b6000838152600760205260409020805460ff191660011790559050610d806118a4565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600455565b60035463ffffffff1660009081526002602052604090205490565b336000908152600a602052604090205490565b60026020526000908152604090205481565b601e81565b60009081526006602052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081610e7457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c61080e565b8160011415610ea457507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d61080e565b8160021415610ed457507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20061080e565b8160031415610f0457507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb61080e565b8160041415610f3457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c961080e565b8160051415610f6457507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495961080e565b8160061415610f9457507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c61080e565b8160071415610fc457507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb461080e565b8160081415610ff457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8061080e565b816009141561102357507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00761080e565b81600a141561105357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3061080e565b81600b141561108357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e561080e565b81600c14156110b357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f61080e565b81600d14156110e357507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd61080e565b81600e141561111357507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10861080e565b81600f141561114357507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b661080e565b816010141561117357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185461080e565b81601114156111a357507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea61080e565b81601214156111d357507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d61080e565b816013141561120357507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0561080e565b816014141561123357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d461080e565b816015141561126357507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296761080e565b816016141561129357507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345361080e565b81601714156112c357507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4861080e565b81601814156112f357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd161080e565b816019141561132357507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c61080e565b81601a141561135357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9961080e565b81601b141561138357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35461080e565b81601c14156113b257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d61080e565b81601d14156113e257507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42761080e565b81601e141561141257507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb61080e565b81601f141561144257507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc61080e565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b600354600160201b900463ffffffff1681565b6001600160a01b038116600090815260096020526040902054819061154b576040805162461bcd60e51b815260206004820152600a6024820152696e6f2062616c616e636560b01b604482015290519081900360640190fd5b6001600160a01b0381166000908152600a60205260409020547f00000000000000000000000000000000000000000000000000000000000000009061159190439061191e565b10156115e4576040805162461bcd60e51b815260206004820152601760248201527f6d696e207761697420626c6f636b73206e6f74206d6574000000000000000000604482015290519081900360640190fd5b6001600160a01b0382166000818152600960205260408082205490519192918381818185875af1925050503d806000811461163b576040519150601f19603f3d011682016040523d82523d6000602084013e611640565b606091505b50509050806116805760405162461bcd60e51b8152600401808060200182810382526025815260200180611a776025913960400191505060405180910390fd5b505050565b34156116c25760405162461bcd60e51b8152600401808060200182810382526035815260200180611acc6035913960400191505060405180910390fd5b6008546040805160016271ceb960e11b031981526001600160a01b0386811660048301529151919092169163ff1c628e91602480830192600092919082900301818387803b15801561171357600080fd5b505af1158015611727573d6000803e3d6000fd5b50505050505050565b60035460008054909163ffffffff600160201b909104811691811660020a1681141561178d5760405162461bcd60e51b8152600401808060200182810382526030815260200180611a9c6030913960400191505060405180910390fd5b8083600080805b60005463ffffffff908116908216101561183e57600185166117e1578392506117c28163ffffffff16610e46565b63ffffffff8216600090815260016020526040902085905591506117fd565b63ffffffff811660009081526001602052604090205492508391505b6118287f0000000000000000000000000000000000000000000000000000000000000000848461083d565b9350600263ffffffff8616049450600101611794565b505060038054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526002602052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b60055434146118e45760405162461bcd60e51b81526004018080602001828103825260388152602001806119dd6038913960400191505060405180910390fd5b336000908152600960205260409020546118fe903461197b565b33600090815260096020908152604080832093909355600a905220439055565b600082821115611975576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156119d5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a2646970667358221220dc48b6e2cc265b5ca880efe92665fc624d657c0dc7bb72a826b4b9c82871b81164736f6c6343000706003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80639b257237116100ec578063e5285dcc1161008a578063ec73295911610064578063ec732959146105fb578063ed33639f14610610578063f178e47c14610625578063fc7e9c6f1461064f576101b7565b8063e5285dcc14610592578063e64cb05b146105bc578063e8295588146105d1576101b7565b8063ba70f757116100c6578063ba70f75714610529578063bcd592611461053e578063c2b40ae414610553578063cd87a3b41461057d576101b7565b80639b257237146103a85780639fa12d0b14610441578063b214faa51461050c576101b7565b80636cd568991161015957806383efc5901161013357806383efc5901461032a5780638bca6d161461033f5780638ea3099e1461035457806390eeb02b14610393576101b7565b80636cd56899146102c15780636d9833e3146102d6578063839df94514610300576101b7565b80633ccfd60b116101955780633ccfd60b14610252578063414a37ba1461026957806341fcfac91461027e5780634ecf518b14610293576101b7565b806312065fe0146101bc57806317cc915c146101e35780632b7ac3f314610221575b600080fd5b3480156101c857600080fd5b506101d1610664565b60408051918252519081900360200190f35b3480156101ef57600080fd5b5061020d6004803603602081101561020657600080fd5b5035610677565b604080519115158252519081900360200190f35b34801561022d57600080fd5b5061023661068c565b604080516001600160a01b039092168252519081900360200190f35b34801561025e57600080fd5b506102676106b0565b005b34801561027557600080fd5b506101d1610750565b34801561028a57600080fd5b506101d1610762565b34801561029f57600080fd5b506102a8610786565b6040805163ffffffff9092168252519081900360200190f35b3480156102cd57600080fd5b50610236610792565b3480156102e257600080fd5b5061020d600480360360208110156102f957600080fd5b50356107a1565b34801561030c57600080fd5b5061020d6004803603602081101561032357600080fd5b5035610813565b34801561033657600080fd5b50610236610828565b34801561034b57600080fd5b506101d1610837565b34801561036057600080fd5b506101d16004803603606081101561037757600080fd5b506001600160a01b03813516906020810135906040013561083d565b34801561039f57600080fd5b506102a8610a09565b610267600480360360e08110156103be57600080fd5b810190602081018135600160201b8111156103d857600080fd5b8201836020820111156103ea57600080fd5b803590602001918460018302840111600160201b8311171561040b57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610a15565b34801561044d57600080fd5b506104bc6004803603602081101561046457600080fd5b810190602081018135600160201b81111561047e57600080fd5b82018360208201111561049057600080fd5b803590602001918460208302840111600160201b831117156104b157600080fd5b509092509050610c08565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104f85781810151838201526020016104e0565b505050509050019250505060405180910390f35b6102676004803603602081101561052257600080fd5b5035610ca7565b34801561053557600080fd5b506101d1610dc8565b34801561054a57600080fd5b506101d1610de3565b34801561055f57600080fd5b506101d16004803603602081101561057657600080fd5b5035610df6565b34801561058957600080fd5b506102a8610e08565b34801561059e57600080fd5b5061020d600480360360208110156105b557600080fd5b5035610e0d565b3480156105c857600080fd5b506101d1610e22565b3480156105dd57600080fd5b506101d1600480360360208110156105f457600080fd5b5035610e46565b34801561060757600080fd5b506101d1611485565b34801561061c57600080fd5b506102366114a9565b34801561063157600080fd5b506101d16004803603602081101561064857600080fd5b50356114cd565b34801561065b57600080fd5b506102a86114df565b3360009081526009602052604090205490565b60066020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026004541415610708576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600455610716336114f2565b6040805133815290517fe19ed71156e31b3c9e18ac7ad8d1b79f0a0feb3be18d23dae612e52040aada4b9181900360200190a16001600455565b600080516020611a3683398151915281565b7f000000000000000000000000000000000000000000000000000000000000000090565b60005463ffffffff1681565b6008546001600160a01b031681565b6000816107b05750600061080e565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156107e35760019250505061080e565b63ffffffff81166107f25750601e5b6000190163ffffffff80821690831614156107bb576000925050505b919050565b60076020526000908152604090205460ff1681565b6008546001600160a01b031690565b60055481565b6000600080516020611a3683398151915283106108a1576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020611a3683398151915282106108ed5760405162461bcd60e51b8152600401808060200182810382526021815260200180611a156021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b15801561093c57600080fd5b505afa158015610950573d6000803e3d6000fd5b505050506040513d604081101561096657600080fd5b5080516020909101519092509050600080516020611a368339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156109d357600080fd5b505afa1580156109e7573d6000803e3d6000fd5b505050506040513d60408110156109fd57600080fd5b50519695505050505050565b60035463ffffffff1681565b60026004541415610a6d576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600455600554821115610ac9576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526006602052604090205460ff1615610b2d576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b610b36866107a1565b610b87576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b6000858152600660205260409020805460ff19166001179055610bab848484611685565b604080516001600160a01b038681168252602082018890528183018590529151918516917f34442074d74b17ccf0e7c1c7cd35089bb0c6e520f6331ce5e77a543fc69665569181900360600190a250506001600455505050505050565b60608167ffffffffffffffff81118015610c2157600080fd5b50604051908082528060200260200182016040528015610c4b578160200160208202803683370190505b50905060005b82811015610ca057610c74848483818110610c6857fe5b90506020020135610e0d565b15610c98576001828281518110610c8757fe5b911515602092830291909101909101525b600101610c51565b5092915050565b60026004541415610cff576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260045560008181526007602052604090205460ff1615610d525760405162461bcd60e51b8152600401808060200182810382526021815260200180611a566021913960400191505060405180910390fd5b6000610d5d82611730565b6000838152600760205260409020805460ff191660011790559050610d806118a4565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600455565b60035463ffffffff1660009081526002602052604090205490565b336000908152600a602052604090205490565b60026020526000908152604090205481565b601e81565b60009081526006602052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081610e7457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c61080e565b8160011415610ea457507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d61080e565b8160021415610ed457507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20061080e565b8160031415610f0457507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb61080e565b8160041415610f3457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c961080e565b8160051415610f6457507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495961080e565b8160061415610f9457507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c61080e565b8160071415610fc457507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb461080e565b8160081415610ff457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8061080e565b816009141561102357507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00761080e565b81600a141561105357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3061080e565b81600b141561108357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e561080e565b81600c14156110b357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f61080e565b81600d14156110e357507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd61080e565b81600e141561111357507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10861080e565b81600f141561114357507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b661080e565b816010141561117357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185461080e565b81601114156111a357507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea61080e565b81601214156111d357507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d61080e565b816013141561120357507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0561080e565b816014141561123357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d461080e565b816015141561126357507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296761080e565b816016141561129357507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345361080e565b81601714156112c357507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4861080e565b81601814156112f357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd161080e565b816019141561132357507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c61080e565b81601a141561135357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9961080e565b81601b141561138357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35461080e565b81601c14156113b257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d61080e565b81601d14156113e257507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42761080e565b81601e141561141257507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb61080e565b81601f141561144257507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc61080e565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b600354600160201b900463ffffffff1681565b6001600160a01b038116600090815260096020526040902054819061154b576040805162461bcd60e51b815260206004820152600a6024820152696e6f2062616c616e636560b01b604482015290519081900360640190fd5b6001600160a01b0381166000908152600a60205260409020547f00000000000000000000000000000000000000000000000000000000000000009061159190439061191e565b10156115e4576040805162461bcd60e51b815260206004820152601760248201527f6d696e207761697420626c6f636b73206e6f74206d6574000000000000000000604482015290519081900360640190fd5b6001600160a01b0382166000818152600960205260408082205490519192918381818185875af1925050503d806000811461163b576040519150601f19603f3d011682016040523d82523d6000602084013e611640565b606091505b50509050806116805760405162461bcd60e51b8152600401808060200182810382526025815260200180611a776025913960400191505060405180910390fd5b505050565b34156116c25760405162461bcd60e51b8152600401808060200182810382526035815260200180611acc6035913960400191505060405180910390fd5b6008546040805160016271ceb960e11b031981526001600160a01b0386811660048301529151919092169163ff1c628e91602480830192600092919082900301818387803b15801561171357600080fd5b505af1158015611727573d6000803e3d6000fd5b50505050505050565b60035460008054909163ffffffff600160201b909104811691811660020a1681141561178d5760405162461bcd60e51b8152600401808060200182810382526030815260200180611a9c6030913960400191505060405180910390fd5b8083600080805b60005463ffffffff908116908216101561183e57600185166117e1578392506117c28163ffffffff16610e46565b63ffffffff8216600090815260016020526040902085905591506117fd565b63ffffffff811660009081526001602052604090205492508391505b6118287f0000000000000000000000000000000000000000000000000000000000000000848461083d565b9350600263ffffffff8616049450600101611794565b505060038054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526002602052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b60055434146118e45760405162461bcd60e51b81526004018080602001828103825260388152602001806119dd6038913960400191505060405180910390fd5b336000908152600960205260409020546118fe903461197b565b33600090815260096020908152604080832093909355600a905220439055565b600082821115611975576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156119d5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a2646970667358221220dc48b6e2cc265b5ca880efe92665fc624d657c0dc7bb72a826b4b9c82871b81164736f6c63430007060033",
  "immutableReferences": {
    "11": [
      {
        "length": 32,
        "start": 1892
      },
      {
        "length": 32,
        "start": 3620
      },
      {
        "length": 32,
        "start": 5478
      }
    ],
    "237": [
      {
        "length": 32,
        "start": 1678
      }
    ],
    "660": [
      {
        "length": 32,
        "start": 5291
      },
      {
        "length": 32,
        "start": 6146
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "159:2443:0:-:0;;;1749:34:3;;;-1:-1:-1;;;;;;1787:27:3;;;460:418:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;460:418:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:11:3;;;1870:59;;;;-1:-1:-1;;;1870:59:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:2;1943:7;:12;;;1935:55;;;;;-1:-1:-1;;;1935:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1996:6;:16;;-1:-1:-1;;1996:16:3;;;;;;;2018;;;;-1:-1:-1;;;;;;2018:16:3;;;2041:80;2064:7;2060:11;;:1;:11;;;2041:80;;;2106:8;;;;:5;:8::i;:::-;2086:17;;;;;;;:14;:17;;;;;;;;:28;;;;2073:3;2041:80;;;-1:-1:-1;2138:18:3;;-1:-1:-1;;2144:11:3;;2138:18;:5;:18::i;:::-;2127:8;;;:5;:8;;;:29;-1:-1:-1;;1645:1:18;1760:7;:22;1288:17:1;1280:67:::1;;;;-1:-1:-1::0;;;1280:67:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1353:20:1::1;::::0;;;;-1:-1:-1;;;;;;1353:20:1;::::1;::::0;-1:-1:-1;1379:12:1::1;:28:::0;730:15:0::1;:27:::0;;-1:-1:-1;;;;;;730:27:0::1;-1:-1:-1::0;;;;;730:27:0;::::1;;::::0;;775:20;767:53:::1;;;::::0;;-1:-1:-1;;;767:53:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;830:40;::::0;-1:-1:-1;159:2443:0;;-1:-1:-1;;;;159:2443:0;4296:3478:3;4343:7;4362:6;4358:3411;;-1:-1:-1;4385:66:3;4370:82;;4358:3411;4467:1;4472;4467:6;4463:3306;;;-1:-1:-1;4490:66:3;4475:82;;4463:3306;4572:1;4577;4572:6;4568:3201;;;-1:-1:-1;4595:66:3;4580:82;;4568:3201;4677:1;4682;4677:6;4673:3096;;;-1:-1:-1;4700:66:3;4685:82;;4673:3096;4782:1;4787;4782:6;4778:2991;;;-1:-1:-1;4805:66:3;4790:82;;4778:2991;4887:1;4892;4887:6;4883:2886;;;-1:-1:-1;4910:66:3;4895:82;;4883:2886;4992:1;4997;4992:6;4988:2781;;;-1:-1:-1;5015:66:3;5000:82;;4988:2781;5097:1;5102;5097:6;5093:2676;;;-1:-1:-1;5120:66:3;5105:82;;5093:2676;5202:1;5207;5202:6;5198:2571;;;-1:-1:-1;5225:66:3;5210:82;;5198:2571;5307:1;5312;5307:6;5303:2466;;;-1:-1:-1;5330:66:3;5315:82;;5303:2466;5412:1;5417:2;5412:7;5408:2361;;;-1:-1:-1;5436:66:3;5421:82;;5408:2361;5518:1;5523:2;5518:7;5514:2255;;;-1:-1:-1;5542:66:3;5527:82;;5514:2255;5624:1;5629:2;5624:7;5620:2149;;;-1:-1:-1;5648:66:3;5633:82;;5620:2149;5730:1;5735:2;5730:7;5726:2043;;;-1:-1:-1;5754:66:3;5739:82;;5726:2043;5836:1;5841:2;5836:7;5832:1937;;;-1:-1:-1;5860:66:3;5845:82;;5832:1937;5942:1;5947:2;5942:7;5938:1831;;;-1:-1:-1;5966:66:3;5951:82;;5938:1831;6048:1;6053:2;6048:7;6044:1725;;;-1:-1:-1;6072:66:3;6057:82;;6044:1725;6154:1;6159:2;6154:7;6150:1619;;;-1:-1:-1;6178:66:3;6163:82;;6150:1619;6260:1;6265:2;6260:7;6256:1513;;;-1:-1:-1;6284:66:3;6269:82;;6256:1513;6366:1;6371:2;6366:7;6362:1407;;;-1:-1:-1;6390:66:3;6375:82;;6362:1407;6472:1;6477:2;6472:7;6468:1301;;;-1:-1:-1;6496:66:3;6481:82;;6468:1301;6578:1;6583:2;6578:7;6574:1195;;;-1:-1:-1;6602:66:3;6587:82;;6574:1195;6684:1;6689:2;6684:7;6680:1089;;;-1:-1:-1;6708:66:3;6693:82;;6680:1089;6790:1;6795:2;6790:7;6786:983;;;-1:-1:-1;6814:66:3;6799:82;;6786:983;6896:1;6901:2;6896:7;6892:877;;;-1:-1:-1;6920:66:3;6905:82;;6892:877;7002:1;7007:2;7002:7;6998:771;;;-1:-1:-1;7026:66:3;7011:82;;6998:771;7108:1;7113:2;7108:7;7104:665;;;-1:-1:-1;7132:66:3;7117:82;;7104:665;7214:1;7219:2;7214:7;7210:559;;;-1:-1:-1;7238:66:3;7223:82;;7210:559;7320:1;7325:2;7320:7;7316:453;;;-1:-1:-1;7344:66:3;7329:82;;7316:453;7426:1;7431:2;7426:7;7422:347;;;-1:-1:-1;7450:66:3;7435:82;;7422:347;7532:1;7537:2;7532:7;7528:241;;;-1:-1:-1;7556:66:3;7541:82;;7528:241;7638:1;7643:2;7638:7;7634:135;;;-1:-1:-1;7662:66:3;7647:82;;7634:135;7740:29;;;-1:-1:-1;;;7740:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;7634:135;4296:3478;;;:::o;159:2443:0:-;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "159:2443:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:98;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;429:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;429:47:1;;:::i;:::-;;;;;;;;;;;;;;;;;;349:35;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;349:35:1;;;;;;;;;;;;;;2202:117;;;;;;;;;;;;;:::i;:::-;;978:114:3;;;;;;;;;;;;;:::i;1215:104:0:-;;;;;;;;;;;;;:::i;1289:20:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;280:30:0;;;;;;;;;;;;;:::i;3677:394:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3677:394:3;;:::i;571:43:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;571:43:1;;:::i;884:109:0:-;;;;;;;;;;;;;:::i;388:27:1:-;;;;;;;;;;;;;:::i;2233:480:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2233:480:3;;;;;;;;;;;;;:::i;1749:34::-;;;;;;;;;;;;;:::i;2866:859:1:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2866:859:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2866:859:1;;;;;;;;;;;;-1:-1:-1;2866:859:1;-1:-1:-1;2866:859:1;;;;;;;;-1:-1:-1;;;;;2866:859:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;4139:298::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4139:298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4139:298:1;;;;;;;;;;-1:-1:-1;4139:298:1;;-1:-1:-1;4139:298:1;-1:-1:-1;4139:298:1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:324;;;;;;;;;;;;;;;;-1:-1:-1;1660:324:1;;:::i;4117:94:3:-;;;;;;;;;;;;;:::i;1103:106:0:-;;;;;;;;;;;;;:::i;1656:40:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1656:40:3;;:::i;1700:45::-;;;;;;;;;;;;;:::i;3961:117:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3961:117:1;;:::i;231:41:0:-;;;;;;;;;;;;;:::i;4296:3478:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4296:3478:3;;:::i;1096:114::-;;;;;;;;;;;;;:::i;1253:31::-;;;;;;;;;;;;;:::i;1603:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1603:49:3;;:::i;1787:27::-;;;;;;;;;;;;;:::i;999:98:0:-;1079:10;1044:7;1069:21;;;:9;:21;;;;;;999:98;:::o;429:47:1:-;;;;;;;;;;;;;;;:::o;349:35::-;;;:::o;2202:117::-;1688:1:18;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;2253:28:1::1;2270:10;2253:16;:28::i;:::-;2292:22;::::0;;2303:10:::1;2292:22:::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;1645:1:18::0;2580:7;:22;2202:117:1:o;978:114:3:-;-1:-1:-1;;;;;;;;;;;978:114:3;:::o;1215:104:0:-;1293:19;1215:104;:::o;1289:20:3:-;;;;;;:::o;280:30:0:-;;;-1:-1:-1;;;;;280:30:0;;:::o;3677:394:3:-;3734:4;3750:10;3746:43;;-1:-1:-1;3777:5:3;3770:12;;3746:43;3821:16;;;;;3877:172;3901:8;;;;;;;:5;:8;;;;;;3892:17;;3888:53;;;3928:4;3921:11;;;;;;3888:53;3952:6;;;3948:52;;-1:-1:-1;1743:2:3;3948:52;-1:-1:-1;;4007:3:3;4025:22;;;;;;;;;3877:172;;4061:5;4054:12;;;;3677:394;;;;:::o;571:43:1:-;;;;;;;;;;;;;;;:::o;884:109:0:-;970:15;;-1:-1:-1;;;;;970:15:0;884:109;:::o;388:27:1:-;;;;:::o;2233:480:3:-;2341:7;-1:-1:-1;;;;;;;;;;;2364:27:3;;2356:72;;;;;-1:-1:-1;;;2356:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2442:28:3;;2434:74;;;;-1:-1:-1;;;2434:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:24;;;-1:-1:-1;;;2574:24:3;;;;;;;;2514:9;2574:24;;;;;;;;2534:5;;2514:9;;-1:-1:-1;;;;;2574:18:3;;;;;:24;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2574:24:3;;;;;;;;;-1:-1:-1;2574:24:3;-1:-1:-1;;;;;;;;;;;;2626:6:3;2615:1;2608:38;2604:42;;2661:7;-1:-1:-1;;;;;2661:18:3;;2680:1;2683;2661:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2661:24:3;;2233:480;-1:-1:-1;;;;;;2233:480:3:o;1749:34::-;;;;;;:::o;2866:859:1:-;1688:1:18;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;3114:12:1::1;::::0;3106:20;::::1;;3098:59;;;::::0;;-1:-1:-1;;;3098:59:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3172:31;::::0;;;:15:::1;:31;::::0;;;;;::::1;;3171:32;3163:76;;;::::0;;-1:-1:-1;;;3163:76:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3253:18;3265:5;3253:11;:18::i;:::-;3245:59;;;::::0;;-1:-1:-1;;;3245:59:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3574:31;::::0;;;:15:::1;:31;::::0;;;;:38;;-1:-1:-1;;3574:38:1::1;3608:4;3574:38;::::0;;3618:40:::1;3631:10:::0;3643:8;3653:4;3618:12:::1;:40::i;:::-;3669:51;::::0;;-1:-1:-1;;;;;3669:51:1;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;-1:-1:-1::0;;1645:1:18;2580:7;:22;-1:-1:-1;;;;;;2866:859:1:o;4139:298::-;4221:19;4267:16;4256:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4256:35:1;;4248:43;;4302:9;4297:136;4317:27;;;4297:136;;;4363:28;4371:16;;4388:1;4371:19;;;;;;;;;;;;;4363:7;:28::i;:::-;4359:68;;;4414:4;4403:5;4409:1;4403:8;;;;;;;;:15;;;:8;;;;;;;;;;;:15;4359:68;4346:3;;4297:136;;;;4139:298;;;;:::o;1660:324::-;1688:1:18;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;1743:24:1::1;::::0;;;:11:::1;:24;::::0;;;;;::::1;;1742:25;1734:71;;;;-1:-1:-1::0;;;1734:71:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:20;1835;1843:11;1835:7;:20::i;:::-;1861:24;::::0;;;:11:::1;:24;::::0;;;;:31;;-1:-1:-1;;1861:31:1::1;1888:4;1861:31;::::0;;1812:43;-1:-1:-1;1898:17:1::1;:15;:17::i;:::-;1927:52;::::0;;::::1;::::0;::::1;::::0;;1963:15:::1;1927:52;::::0;::::1;::::0;;;1935:11;;1927:52:::1;::::0;;;;;;::::1;-1:-1:-1::0;;1645:1:18;2580:7;:22;1660:324:1:o;4117:94:3:-;4189:16;;;;4161:7;4183:23;;;:5;:23;;;;;;4117:94;:::o;1103:106:0:-;1191:10;1153:4;1176:26;;;:14;:26;;;;;;1103:106;:::o;1656:40:3:-;;;;;;;;;;;;;:::o;1700:45::-;1743:2;1700:45;:::o;3961:117:1:-;4023:4;4042:31;;;:15;:31;;;;;;;;;3961:117::o;231:41:0:-;;;:::o;4296:3478:3:-;4343:7;4362:6;4358:3411;;-1:-1:-1;4385:66:3;4370:82;;4358:3411;4467:1;4472;4467:6;4463:3306;;;-1:-1:-1;4490:66:3;4475:82;;4463:3306;4572:1;4577;4572:6;4568:3201;;;-1:-1:-1;4595:66:3;4580:82;;4568:3201;4677:1;4682;4677:6;4673:3096;;;-1:-1:-1;4700:66:3;4685:82;;4673:3096;4782:1;4787;4782:6;4778:2991;;;-1:-1:-1;4805:66:3;4790:82;;4778:2991;4887:1;4892;4887:6;4883:2886;;;-1:-1:-1;4910:66:3;4895:82;;4883:2886;4992:1;4997;4992:6;4988:2781;;;-1:-1:-1;5015:66:3;5000:82;;4988:2781;5097:1;5102;5097:6;5093:2676;;;-1:-1:-1;5120:66:3;5105:82;;5093:2676;5202:1;5207;5202:6;5198:2571;;;-1:-1:-1;5225:66:3;5210:82;;5198:2571;5307:1;5312;5307:6;5303:2466;;;-1:-1:-1;5330:66:3;5315:82;;5303:2466;5412:1;5417:2;5412:7;5408:2361;;;-1:-1:-1;5436:66:3;5421:82;;5408:2361;5518:1;5523:2;5518:7;5514:2255;;;-1:-1:-1;5542:66:3;5527:82;;5514:2255;5624:1;5629:2;5624:7;5620:2149;;;-1:-1:-1;5648:66:3;5633:82;;5620:2149;5730:1;5735:2;5730:7;5726:2043;;;-1:-1:-1;5754:66:3;5739:82;;5726:2043;5836:1;5841:2;5836:7;5832:1937;;;-1:-1:-1;5860:66:3;5845:82;;5832:1937;5942:1;5947:2;5942:7;5938:1831;;;-1:-1:-1;5966:66:3;5951:82;;5938:1831;6048:1;6053:2;6048:7;6044:1725;;;-1:-1:-1;6072:66:3;6057:82;;6044:1725;6154:1;6159:2;6154:7;6150:1619;;;-1:-1:-1;6178:66:3;6163:82;;6150:1619;6260:1;6265:2;6260:7;6256:1513;;;-1:-1:-1;6284:66:3;6269:82;;6256:1513;6366:1;6371:2;6366:7;6362:1407;;;-1:-1:-1;6390:66:3;6375:82;;6362:1407;6472:1;6477:2;6472:7;6468:1301;;;-1:-1:-1;6496:66:3;6481:82;;6468:1301;6578:1;6583:2;6578:7;6574:1195;;;-1:-1:-1;6602:66:3;6587:82;;6574:1195;6684:1;6689:2;6684:7;6680:1089;;;-1:-1:-1;6708:66:3;6693:82;;6680:1089;6790:1;6795:2;6790:7;6786:983;;;-1:-1:-1;6814:66:3;6799:82;;6786:983;6896:1;6901:2;6896:7;6892:877;;;-1:-1:-1;6920:66:3;6905:82;;6892:877;7002:1;7007:2;7002:7;6998:771;;;-1:-1:-1;7026:66:3;7011:82;;6998:771;7108:1;7113:2;7108:7;7104:665;;;-1:-1:-1;7132:66:3;7117:82;;7104:665;7214:1;7219:2;7214:7;7210:559;;;-1:-1:-1;7238:66:3;7223:82;;7210:559;7320:1;7325:2;7320:7;7316:453;;;-1:-1:-1;7344:66:3;7329:82;;7316:453;7426:1;7431:2;7426:7;7422:347;;;-1:-1:-1;7450:66:3;7435:82;;7422:347;7532:1;7537:2;7532:7;7528:241;;;-1:-1:-1;7556:66:3;7541:82;;7528:241;7638:1;7643:2;7638:7;7634:135;;;-1:-1:-1;7662:66:3;7647:82;;7634:135;7740:29;;;-1:-1:-1;;;7740:29:3;;;;;;;;;;;;-1:-1:-1;;;7740:29:3;;;;;;;;;;;;;;1096:114;1133:77;1096:114;:::o;1253:31::-;;;:::o;1603:49::-;;;;;;;;;;;;;:::o;1787:27::-;;;-1:-1:-1;;;1787:27:3;;;;;:::o;1832:251:0:-;-1:-1:-1;;;;;1663:17:0;;1683:1;1663:17;;;:9;:17;;;;;;1898:10;;1655:44;;;;;-1:-1:-1;;;1655:44:0;;;;;;;;;;;;-1:-1:-1;;;1655:44:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;1734:22:0;;;;;;:14;:22;;;;;;1761:19;;1717:40;;:12;;:16;:40::i;:::-;:63;;1709:99;;;;;-1:-1:-1;;;1709:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1958:15:0;::::1;1940:12;1982:21:::0;;;:9:::1;:21;::::0;;;;;;1958:51;;1940:12;;1958:15;1940:12;1958:51;1940:12;1958:51;1982:21;1958:15;:51:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:70;;;2027:7;2019:57;;;;-1:-1:-1::0;;;2019:57:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:1;1832:251:::0;;:::o;2089:511::-;2270:9;:14;2262:80;;;;-1:-1:-1;;;2262:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:15;;2376:45;;;-1:-1:-1;;;;;;2376:45:0;;-1:-1:-1;;;;;2376:45:0;;;;;;;;;2384:15;;;;;2376:33;;:45;;;;;2384:15;;2376:45;;;;;;;2384:15;;2376:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2089:511;;;:::o;2717:888:3:-;2807:9;;2767:12;2855:6;;2767:12;;2807:9;-1:-1:-1;;;2807:9:3;;;;;;2855:6;;2851:1;2844:17;2830:31;;;;2822:92;;;;-1:-1:-1;;;2822:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2942:10;2985:5;2920:19;;;3034:360;3057:6;;;;;;3053:10;;;;3034:360;;;3082:16;;;3078:224;;3122:16;3115:23;;3156:8;3162:1;3156:8;;:5;:8::i;:::-;3174:17;;;;;;;:14;:17;;;;;:36;;;3148:16;-1:-1:-1;3078:224:3;;;3242:17;;;;;;;:14;:17;;;;;;;-1:-1:-1;3277:16:3;;-1:-1:-1;3078:224:3;3328:34;3342:6;3350:4;3356:5;3328:13;:34::i;:::-;3309:53;-1:-1:-1;3386:1:3;3370:17;;;;;-1:-1:-1;3065:3:3;;3034:360;;;-1:-1:-1;;3423:16:3;;;1743:2;3422:42;3423:16;;;;:20;;;3422:42;;;;;;3470:31;;-1:-1:-1;;3470:31:3;;;;;;;-1:-1:-1;3507:19:3;;;:5;:19;;;;;;:38;;;;3551:26;;3563:14;;;3551:26;-1:-1:-1;;;3551:26:3;-1:-1:-1;;3551:26:3;;;;;;;;;;-1:-1:-1;3563:14:3;;;-1:-1:-1;;;2717:888:3:o;1325:277:0:-;1401:12;;1388:9;:25;1380:94;;;;-1:-1:-1;;;1380:94:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1518:10;1508:21;;;;:9;:21;;;;;;:36;;1534:9;1508:25;:36::i;:::-;1494:10;1484:21;;;;:9;:21;;;;;;;;:60;;;;1554:14;:26;;;1583:12;1554:41;;1325:277::o;3136:155:7:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:7;;;3136:155::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:7:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./FlexNFT.sol\";\nimport \"./FlexClub.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\ncontract ETHFlexClub is FlexClub {\n    using SafeMath for uint256;\n\n    uint public immutable MINIMUM_WAIT_BLOCKS;\n\n\n    address public flexNFTContract;\n    //deposits\n    mapping(address => uint256) private _balances;\n    //deposit blocks\n    mapping(address => uint256) private _depositBlocks;\n\n    constructor(\n        IVerifier _verifier,\n        IHasher _hasher,\n        uint256 _denomination,\n        uint32 _merkleTreeHeight,\n        address _flexNFT,\n        uint _minimumWaitBlocks\n    ) FlexClub(_verifier, _hasher, _denomination, _merkleTreeHeight) {\n\n        flexNFTContract =  _flexNFT;\n        require(_minimumWaitBlocks>0, \"zero min wait blocks\");\n        MINIMUM_WAIT_BLOCKS = _minimumWaitBlocks; \n    }\n\n    function getFlexNFTAddress() view external returns (address) {\n        return address(flexNFTContract);\n    }\n\n    function getBalance() view external returns (uint256){\n        return _balances[msg.sender];\n    }\n\n    function getDepositBlock() view external returns (uint) {\n        return _depositBlocks[msg.sender];\n    }\n\n    function getMinimumWaitBlocks() view external returns (uint) {\n        return MINIMUM_WAIT_BLOCKS;\n    }\n\n    function _processDeposit() internal override {\n        require(msg.value == denomination, \"Please send `mixDenomination` ETH along with transaction\");\n        _balances[msg.sender] = _balances[msg.sender].add(msg.value);\n        _depositBlocks[msg.sender] = block.number;\n    }\n\n    modifier canWithdraw(address sender) {\n        require(_balances[sender] > 0, \"no balance\");\n        require(block.number.sub(_depositBlocks[sender]) >= MINIMUM_WAIT_BLOCKS, \"min wait blocks not met\");\n        _;\n    }\n\n    function _processWithdraw(address payable _recipient) canWithdraw(_recipient) internal override  {\n        (bool success, ) = _recipient.call{ value: _balances[_recipient] }(\"\");\n        require(success, \"payment to _recipient did not go thru\");\n    }\n\n    function _processMint(\n        address payable _recipient,\n        address payable _relayer,\n        uint256 _fee\n    ) internal override {\n        // sanity checks\n        require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\n        // mint FlexNFT\n        FlexNFT(flexNFTContract).awardNFT(_recipient);\n\n        // if (_fee > 0) {\n        //   (success, ) = _relayer.call{ value: _fee }(\"\");\n        //   require(success, \"payment to _relayer did not go thru\");\n        // }\n    }\n}\n",
  "sourcePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/ETHFlexClub.sol",
  "ast": {
    "absolutePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/ETHFlexClub.sol",
    "exportedSymbols": {
      "Address": [
        3273
      ],
      "Context": [
        3296
      ],
      "Counters": [
        3346
      ],
      "ERC165": [
        1474
      ],
      "ERC721": [
        2785
      ],
      "ETHFlexClub": [
        215
      ],
      "EnumerableMap": [
        3906
      ],
      "EnumerableSet": [
        4398
      ],
      "FlexClub": [
        499
      ],
      "FlexNFT": [
        638
      ],
      "IERC165": [
        1486
      ],
      "IERC721": [
        2901
      ],
      "IERC721Enumerable": [
        2932
      ],
      "IERC721Metadata": [
        2959
      ],
      "IERC721Receiver": [
        2977
      ],
      "IFlexNFT": [
        511
      ],
      "IHasher": [
        652
      ],
      "IVerifier": [
        231
      ],
      "MerkleTreeWithHistory": [
        1307
      ],
      "Ownable": [
        1417
      ],
      "ReentrancyGuard": [
        4438
      ],
      "SafeMath": [
        1841
      ],
      "Strings": [
        4525
      ]
    },
    "id": 216,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/FlexNFT.sol",
        "file": "./FlexNFT.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 639,
        "src": "57:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/FlexClub.sol",
        "file": "./FlexClub.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 500,
        "src": "81:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 1842,
        "src": "106:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "FlexClub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 499,
              "src": "183:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FlexClub_$499",
                "typeString": "contract FlexClub"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "183:8:0"
          }
        ],
        "contractDependencies": [
          499,
          1307,
          4438
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215,
          499,
          4438,
          1307
        ],
        "name": "ETHFlexClub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 7,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1841,
              "src": "204:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1841",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "198:27:0",
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "e64cb05b",
            "id": 11,
            "mutability": "immutable",
            "name": "MINIMUM_WAIT_BLOCKS",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "231:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "231:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6cd56899",
            "id": 13,
            "mutability": "mutable",
            "name": "flexNFTContract",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "280:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "280:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "331:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "350:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_depositBlocks",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "403:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "411:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "403:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "719:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "flexNFTContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "730:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_flexNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "749:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "730:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "730:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47,
                          "name": "_minimumWaitBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "775:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "794:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "775:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f206d696e207761697420626c6f636b73",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "797:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a095065328237a7fa24422a11a7e30a7e7a287d3aec79d19d063beaad679cdd",
                          "typeString": "literal_string \"zero min wait blocks\""
                        },
                        "value": "zero min wait blocks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a095065328237a7fa24422a11a7e30a7e7a287d3aec79d19d063beaad679cdd",
                          "typeString": "literal_string \"zero min wait blocks\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "767:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "767:53:0"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "MINIMUM_WAIT_BLOCKS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "830:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_minimumWaitBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "852:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "830:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "830:40:0"
                }
              ]
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 36,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "665:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$231",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "id": 37,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "676:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$652",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "id": 38,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "685:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 39,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "700:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 40,
                "modifierName": {
                  "id": 35,
                  "name": "FlexClub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 499,
                  "src": "656:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FlexClub_$499_$",
                    "typeString": "type(contract FlexClub)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "656:62:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "481:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$231",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 231,
                    "src": "481:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$231",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "510:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$652",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 652,
                    "src": "510:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$652",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "535:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "566:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_flexNFT",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "600:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_minimumWaitBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "626:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:184:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:0"
            },
            "scope": 215,
            "src": "460:418:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "945:48:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65,
                        "name": "flexNFTContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "970:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "962:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "962:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "962:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 67,
                  "nodeType": "Return",
                  "src": "955:31:0"
                }
              ]
            },
            "functionSelector": "83efc590",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlexNFTAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "936:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:9:0"
            },
            "scope": 215,
            "src": "884:109:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1052:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 74,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1069:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 77,
                    "indexExpression": {
                      "expression": {
                        "id": 75,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1079:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1079:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1069:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "1062:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:2:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "1044:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1043:9:0"
            },
            "scope": 215,
            "src": "999:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1159:50:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 85,
                      "name": "_depositBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1176:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 88,
                    "indexExpression": {
                      "expression": {
                        "id": 86,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1191:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1191:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1176:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1169:33:0"
                }
              ]
            },
            "functionSelector": "bcd59261",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1127:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1153:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:6:0"
            },
            "scope": 215,
            "src": "1103:106:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1276:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 96,
                    "name": "MINIMUM_WAIT_BLOCKS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1293:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "1286:26:0"
                }
              ]
            },
            "functionSelector": "41fcfac9",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumWaitBlocks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:2:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1270:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:6:0"
            },
            "scope": 215,
            "src": "1215:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              344
            ],
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1370:232:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 104,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1388:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1388:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 106,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "1401:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1388:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1415:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1380:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:94:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 111,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1484:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "expression": {
                          "id": 112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1494:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1494:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1484:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1534:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 115,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1508:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 118,
                          "indexExpression": {
                            "expression": {
                              "id": 116,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1518:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1518:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1508:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1668,
                        "src": "1508:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1508:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1484:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:60:0"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 125,
                        "name": "_depositBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1554:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 128,
                      "indexExpression": {
                        "expression": {
                          "id": 126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1569:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1569:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1554:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 129,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1583:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1583:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1554:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:41:0"
                }
              ]
            },
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 101,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1361:8:0"
            },
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1349:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:0"
            },
            "scope": 215,
            "src": "1325:277:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "1645:181:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 139,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1663:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 141,
                          "indexExpression": {
                            "id": 140,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "1673:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1663:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1683:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1663:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2062616c616e6365",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1686:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4941191dcea6bf8c845dd7847c2031866147823b70d5b4756fcadb5e11ff70cc",
                          "typeString": "literal_string \"no balance\""
                        },
                        "value": "no balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4941191dcea6bf8c845dd7847c2031866147823b70d5b4756fcadb5e11ff70cc",
                          "typeString": "literal_string \"no balance\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 151,
                                "name": "_depositBlocks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21,
                                "src": "1734:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 153,
                              "indexExpression": {
                                "id": 152,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136,
                                "src": "1749:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1734:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 148,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1717:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "1717:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1690,
                            "src": "1717:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1717:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 155,
                          "name": "MINIMUM_WAIT_BLOCKS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1761:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1717:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e207761697420626c6f636b73206e6f74206d6574",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1782:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d2edf4dd8e6aa1bf67f1d0bd29fb4608fdb0e612e5d76ebe6b3fa144c73bb6f",
                          "typeString": "literal_string \"min wait blocks not met\""
                        },
                        "value": "min wait blocks not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d2edf4dd8e6aa1bf67f1d0bd29fb4608fdb0e612e5d76ebe6b3fa144c73bb6f",
                          "typeString": "literal_string \"min wait blocks not met\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:99:0"
                },
                {
                  "id": 160,
                  "nodeType": "PlaceholderStatement",
                  "src": "1818:1:0"
                }
              ]
            },
            "id": 162,
            "name": "canWithdraw",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "1629:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:16:0"
            },
            "src": "1608:218:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              367
            ],
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "1929:154:0",
              "statements": [
                {
                  "assignments": [
                    172,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "1940:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1940:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 181,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2006:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 173,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "1958:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1958:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "baseExpression": {
                            "id": 175,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1982:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 177,
                          "indexExpression": {
                            "id": 176,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1992:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1982:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1958:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1939:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 183,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2027:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2036:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2019:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:57:0"
                }
              ]
            },
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 167,
                    "name": "_recipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 164,
                    "src": "1898:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 168,
                "modifierName": {
                  "id": 166,
                  "name": "canWithdraw",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 162,
                  "src": "1886:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1886:23:0"
              }
            ],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 169,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1919:8:0"
            },
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1858:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1857:28:0"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:0:0"
            },
            "scope": 215,
            "src": "1832:251:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              439
            ],
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2227:373:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 199,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2270:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2270:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2283:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2270:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2286:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2262:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 210,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2410:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 207,
                            "name": "flexNFTContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2384:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 206,
                          "name": "FlexNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "2376:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FlexNFT_$638_$",
                            "typeString": "type(contract FlexNFT)"
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2376:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlexNFT_$638",
                          "typeString": "contract FlexNFT"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "awardNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 622,
                      "src": "2376:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:45:0"
                }
              ]
            },
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processMint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 196,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2218:8:0"
            },
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2120:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2156:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2190:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:98:0"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:0:0"
            },
            "scope": 215,
            "src": "2089:511:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 216,
        "src": "159:2443:0"
      }
    ],
    "src": "32:2571:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/ETHFlexClub.sol",
      "exportedSymbols": {
        "Address": [
          3273
        ],
        "Context": [
          3296
        ],
        "Counters": [
          3346
        ],
        "ERC165": [
          1474
        ],
        "ERC721": [
          2785
        ],
        "ETHFlexClub": [
          215
        ],
        "EnumerableMap": [
          3906
        ],
        "EnumerableSet": [
          4398
        ],
        "FlexClub": [
          499
        ],
        "FlexNFT": [
          638
        ],
        "IERC165": [
          1486
        ],
        "IERC721": [
          2901
        ],
        "IERC721Enumerable": [
          2932
        ],
        "IERC721Metadata": [
          2959
        ],
        "IERC721Receiver": [
          2977
        ],
        "IFlexNFT": [
          511
        ],
        "IHasher": [
          652
        ],
        "IVerifier": [
          231
        ],
        "MerkleTreeWithHistory": [
          1307
        ],
        "Ownable": [
          1417
        ],
        "ReentrancyGuard": [
          4438
        ],
        "SafeMath": [
          1841
        ],
        "Strings": [
          4525
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 639,
          "absolutePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/FlexNFT.sol",
          "file": "./FlexNFT.sol",
          "scope": 216,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "57:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 500,
          "absolutePath": "/Users/mohsenahmadvand/Projects/zkflex-nft/contracts/FlexClub.sol",
          "file": "./FlexClub.sol",
          "scope": 216,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "81:24:0"
      },
      {
        "attributes": {
          "SourceUnit": 1842,
          "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
          "file": "@openzeppelin/contracts/math/SafeMath.sol",
          "scope": 216,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "106:51:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            499,
            1307,
            4438
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            215,
            499,
            4438,
            1307
          ],
          "name": "ETHFlexClub",
          "scope": 216
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "FlexClub",
                  "referencedDeclaration": 499,
                  "type": "contract FlexClub"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "183:8:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "183:8:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 1841,
                  "type": "library SafeMath"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "204:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 8,
                "name": "ElementaryTypeName",
                "src": "217:7:0"
              }
            ],
            "id": 9,
            "name": "UsingForDirective",
            "src": "198:27:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "e64cb05b",
              "mutability": "immutable",
              "name": "MINIMUM_WAIT_BLOCKS",
              "scope": 215,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 10,
                "name": "ElementaryTypeName",
                "src": "231:4:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "231:41:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "6cd56899",
              "mutability": "mutable",
              "name": "flexNFTContract",
              "scope": 215,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 12,
                "name": "ElementaryTypeName",
                "src": "280:7:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "280:30:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_balances",
              "scope": 215,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "339:7:0"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
                    "src": "350:7:0"
                  }
                ],
                "id": 16,
                "name": "Mapping",
                "src": "331:27:0"
              }
            ],
            "id": 17,
            "name": "VariableDeclaration",
            "src": "331:45:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_depositBlocks",
              "scope": 215,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "411:7:0"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
                    "src": "422:7:0"
                  }
                ],
                "id": 20,
                "name": "Mapping",
                "src": "403:27:0"
              }
            ],
            "id": 21,
            "name": "VariableDeclaration",
            "src": "403:50:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 215,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_verifier",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IVerifier",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IVerifier",
                          "referencedDeclaration": 231,
                          "type": "contract IVerifier"
                        },
                        "id": 22,
                        "name": "UserDefinedTypeName",
                        "src": "481:9:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "481:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_hasher",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IHasher",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IHasher",
                          "referencedDeclaration": 652,
                          "type": "contract IHasher"
                        },
                        "id": 24,
                        "name": "UserDefinedTypeName",
                        "src": "510:7:0"
                      }
                    ],
                    "id": 25,
                    "name": "VariableDeclaration",
                    "src": "510:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_denomination",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 26,
                        "name": "ElementaryTypeName",
                        "src": "535:7:0"
                      }
                    ],
                    "id": 27,
                    "name": "VariableDeclaration",
                    "src": "535:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_merkleTreeHeight",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint32",
                          "type": "uint32"
                        },
                        "id": 28,
                        "name": "ElementaryTypeName",
                        "src": "566:6:0"
                      }
                    ],
                    "id": 29,
                    "name": "VariableDeclaration",
                    "src": "566:24:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_flexNFT",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 30,
                        "name": "ElementaryTypeName",
                        "src": "600:7:0"
                      }
                    ],
                    "id": 31,
                    "name": "VariableDeclaration",
                    "src": "600:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_minimumWaitBlocks",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 32,
                        "name": "ElementaryTypeName",
                        "src": "626:4:0"
                      }
                    ],
                    "id": 33,
                    "name": "VariableDeclaration",
                    "src": "626:23:0"
                  }
                ],
                "id": 34,
                "name": "ParameterList",
                "src": "471:184:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 41,
                "name": "ParameterList",
                "src": "719:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 499,
                      "type": "type(contract FlexClub)",
                      "value": "FlexClub"
                    },
                    "id": 35,
                    "name": "Identifier",
                    "src": "656:8:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 23,
                      "type": "contract IVerifier",
                      "value": "_verifier"
                    },
                    "id": 36,
                    "name": "Identifier",
                    "src": "665:9:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 25,
                      "type": "contract IHasher",
                      "value": "_hasher"
                    },
                    "id": 37,
                    "name": "Identifier",
                    "src": "676:7:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 27,
                      "type": "uint256",
                      "value": "_denomination"
                    },
                    "id": 38,
                    "name": "Identifier",
                    "src": "685:13:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 29,
                      "type": "uint32",
                      "value": "_merkleTreeHeight"
                    },
                    "id": 39,
                    "name": "Identifier",
                    "src": "700:17:0"
                  }
                ],
                "id": 40,
                "name": "ModifierInvocation",
                "src": "656:62:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "address",
                              "value": "flexNFTContract"
                            },
                            "id": 42,
                            "name": "Identifier",
                            "src": "730:15:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 31,
                              "type": "address",
                              "value": "_flexNFT"
                            },
                            "id": 43,
                            "name": "Identifier",
                            "src": "749:8:0"
                          }
                        ],
                        "id": 44,
                        "name": "Assignment",
                        "src": "730:27:0"
                      }
                    ],
                    "id": 45,
                    "name": "ExpressionStatement",
                    "src": "730:27:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3a095065328237a7fa24422a11a7e30a7e7a287d3aec79d19d063beaad679cdd",
                                  "typeString": "literal_string \"zero min wait blocks\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 46,
                            "name": "Identifier",
                            "src": "767:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 33,
                                  "type": "uint256",
                                  "value": "_minimumWaitBlocks"
                                },
                                "id": 47,
                                "name": "Identifier",
                                "src": "775:18:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 48,
                                "name": "Literal",
                                "src": "794:1:0"
                              }
                            ],
                            "id": 49,
                            "name": "BinaryOperation",
                            "src": "775:20:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7a65726f206d696e207761697420626c6f636b73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"zero min wait blocks\"",
                              "value": "zero min wait blocks"
                            },
                            "id": 50,
                            "name": "Literal",
                            "src": "797:22:0"
                          }
                        ],
                        "id": 51,
                        "name": "FunctionCall",
                        "src": "767:53:0"
                      }
                    ],
                    "id": 52,
                    "name": "ExpressionStatement",
                    "src": "767:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11,
                              "type": "uint256",
                              "value": "MINIMUM_WAIT_BLOCKS"
                            },
                            "id": 53,
                            "name": "Identifier",
                            "src": "830:19:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 33,
                              "type": "uint256",
                              "value": "_minimumWaitBlocks"
                            },
                            "id": 54,
                            "name": "Identifier",
                            "src": "852:18:0"
                          }
                        ],
                        "id": 55,
                        "name": "Assignment",
                        "src": "830:40:0"
                      }
                    ],
                    "id": 56,
                    "name": "ExpressionStatement",
                    "src": "830:40:0"
                  }
                ],
                "id": 57,
                "name": "Block",
                "src": "719:159:0"
              }
            ],
            "id": 58,
            "name": "FunctionDefinition",
            "src": "460:418:0"
          },
          {
            "attributes": {
              "functionSelector": "83efc590",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getFlexNFTAddress",
              "scope": 215,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 59,
                "name": "ParameterList",
                "src": "910:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 69,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "936:7:0"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "936:7:0"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "935:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 62
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address"
                                },
                                "id": 63,
                                "name": "ElementaryTypeName",
                                "src": "962:7:0"
                              }
                            ],
                            "id": 64,
                            "name": "ElementaryTypeNameExpression",
                            "src": "962:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "address",
                              "value": "flexNFTContract"
                            },
                            "id": 65,
                            "name": "Identifier",
                            "src": "970:15:0"
                          }
                        ],
                        "id": 66,
                        "name": "FunctionCall",
                        "src": "962:24:0"
                      }
                    ],
                    "id": 67,
                    "name": "Return",
                    "src": "955:31:0"
                  }
                ],
                "id": 68,
                "name": "Block",
                "src": "945:48:0"
              }
            ],
            "id": 69,
            "name": "FunctionDefinition",
            "src": "884:109:0"
          },
          {
            "attributes": {
              "functionSelector": "12065fe0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getBalance",
              "scope": 215,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 70,
                "name": "ParameterList",
                "src": "1018:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 80,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 71,
                        "name": "ElementaryTypeName",
                        "src": "1044:7:0"
                      }
                    ],
                    "id": 72,
                    "name": "VariableDeclaration",
                    "src": "1044:7:0"
                  }
                ],
                "id": 73,
                "name": "ParameterList",
                "src": "1043:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 73
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17,
                              "type": "mapping(address => uint256)",
                              "value": "_balances"
                            },
                            "id": 74,
                            "name": "Identifier",
                            "src": "1069:9:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 75,
                                "name": "Identifier",
                                "src": "1079:3:0"
                              }
                            ],
                            "id": 76,
                            "name": "MemberAccess",
                            "src": "1079:10:0"
                          }
                        ],
                        "id": 77,
                        "name": "IndexAccess",
                        "src": "1069:21:0"
                      }
                    ],
                    "id": 78,
                    "name": "Return",
                    "src": "1062:28:0"
                  }
                ],
                "id": 79,
                "name": "Block",
                "src": "1052:45:0"
              }
            ],
            "id": 80,
            "name": "FunctionDefinition",
            "src": "999:98:0"
          },
          {
            "attributes": {
              "functionSelector": "bcd59261",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getDepositBlock",
              "scope": 215,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 81,
                "name": "ParameterList",
                "src": "1127:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 91,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 82,
                        "name": "ElementaryTypeName",
                        "src": "1153:4:0"
                      }
                    ],
                    "id": 83,
                    "name": "VariableDeclaration",
                    "src": "1153:4:0"
                  }
                ],
                "id": 84,
                "name": "ParameterList",
                "src": "1152:6:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 84
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "mapping(address => uint256)",
                              "value": "_depositBlocks"
                            },
                            "id": 85,
                            "name": "Identifier",
                            "src": "1176:14:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 86,
                                "name": "Identifier",
                                "src": "1191:3:0"
                              }
                            ],
                            "id": 87,
                            "name": "MemberAccess",
                            "src": "1191:10:0"
                          }
                        ],
                        "id": 88,
                        "name": "IndexAccess",
                        "src": "1176:26:0"
                      }
                    ],
                    "id": 89,
                    "name": "Return",
                    "src": "1169:33:0"
                  }
                ],
                "id": 90,
                "name": "Block",
                "src": "1159:50:0"
              }
            ],
            "id": 91,
            "name": "FunctionDefinition",
            "src": "1103:106:0"
          },
          {
            "attributes": {
              "functionSelector": "41fcfac9",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getMinimumWaitBlocks",
              "scope": 215,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 92,
                "name": "ParameterList",
                "src": "1244:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 99,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 93,
                        "name": "ElementaryTypeName",
                        "src": "1270:4:0"
                      }
                    ],
                    "id": 94,
                    "name": "VariableDeclaration",
                    "src": "1270:4:0"
                  }
                ],
                "id": 95,
                "name": "ParameterList",
                "src": "1269:6:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 95
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 11,
                          "type": "uint256",
                          "value": "MINIMUM_WAIT_BLOCKS"
                        },
                        "id": 96,
                        "name": "Identifier",
                        "src": "1293:19:0"
                      }
                    ],
                    "id": 97,
                    "name": "Return",
                    "src": "1286:26:0"
                  }
                ],
                "id": 98,
                "name": "Block",
                "src": "1276:43:0"
              }
            ],
            "id": 99,
            "name": "FunctionDefinition",
            "src": "1215:104:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                344
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_processDeposit",
              "scope": 215,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 101,
                "name": "OverrideSpecifier",
                "src": "1361:8:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 100,
                "name": "ParameterList",
                "src": "1349:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 102,
                "name": "ParameterList",
                "src": "1370:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                                  "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 103,
                            "name": "Identifier",
                            "src": "1380:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 104,
                                    "name": "Identifier",
                                    "src": "1388:3:0"
                                  }
                                ],
                                "id": 105,
                                "name": "MemberAccess",
                                "src": "1388:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 239,
                                  "type": "uint256",
                                  "value": "denomination"
                                },
                                "id": 106,
                                "name": "Identifier",
                                "src": "1401:12:0"
                              }
                            ],
                            "id": 107,
                            "name": "BinaryOperation",
                            "src": "1388:25:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Please send `mixDenomination` ETH along with transaction\"",
                              "value": "Please send `mixDenomination` ETH along with transaction"
                            },
                            "id": 108,
                            "name": "Literal",
                            "src": "1415:58:0"
                          }
                        ],
                        "id": 109,
                        "name": "FunctionCall",
                        "src": "1380:94:0"
                      }
                    ],
                    "id": 110,
                    "name": "ExpressionStatement",
                    "src": "1380:94:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17,
                                  "type": "mapping(address => uint256)",
                                  "value": "_balances"
                                },
                                "id": 111,
                                "name": "Identifier",
                                "src": "1484:9:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 112,
                                    "name": "Identifier",
                                    "src": "1494:3:0"
                                  }
                                ],
                                "id": 113,
                                "name": "MemberAccess",
                                "src": "1494:10:0"
                              }
                            ],
                            "id": 114,
                            "name": "IndexAccess",
                            "src": "1484:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 1668,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 17,
                                          "type": "mapping(address => uint256)",
                                          "value": "_balances"
                                        },
                                        "id": 115,
                                        "name": "Identifier",
                                        "src": "1508:9:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 116,
                                            "name": "Identifier",
                                            "src": "1518:3:0"
                                          }
                                        ],
                                        "id": 117,
                                        "name": "MemberAccess",
                                        "src": "1518:10:0"
                                      }
                                    ],
                                    "id": 118,
                                    "name": "IndexAccess",
                                    "src": "1508:21:0"
                                  }
                                ],
                                "id": 119,
                                "name": "MemberAccess",
                                "src": "1508:25:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 120,
                                    "name": "Identifier",
                                    "src": "1534:3:0"
                                  }
                                ],
                                "id": 121,
                                "name": "MemberAccess",
                                "src": "1534:9:0"
                              }
                            ],
                            "id": 122,
                            "name": "FunctionCall",
                            "src": "1508:36:0"
                          }
                        ],
                        "id": 123,
                        "name": "Assignment",
                        "src": "1484:60:0"
                      }
                    ],
                    "id": 124,
                    "name": "ExpressionStatement",
                    "src": "1484:60:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 21,
                                  "type": "mapping(address => uint256)",
                                  "value": "_depositBlocks"
                                },
                                "id": 125,
                                "name": "Identifier",
                                "src": "1554:14:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 126,
                                    "name": "Identifier",
                                    "src": "1569:3:0"
                                  }
                                ],
                                "id": 127,
                                "name": "MemberAccess",
                                "src": "1569:10:0"
                              }
                            ],
                            "id": 128,
                            "name": "IndexAccess",
                            "src": "1554:26:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "number",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 129,
                                "name": "Identifier",
                                "src": "1583:5:0"
                              }
                            ],
                            "id": 130,
                            "name": "MemberAccess",
                            "src": "1583:12:0"
                          }
                        ],
                        "id": 131,
                        "name": "Assignment",
                        "src": "1554:41:0"
                      }
                    ],
                    "id": 132,
                    "name": "ExpressionStatement",
                    "src": "1554:41:0"
                  }
                ],
                "id": 133,
                "name": "Block",
                "src": "1370:232:0"
              }
            ],
            "id": 134,
            "name": "FunctionDefinition",
            "src": "1325:277:0"
          },
          {
            "attributes": {
              "name": "canWithdraw",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "sender",
                      "scope": 162,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 135,
                        "name": "ElementaryTypeName",
                        "src": "1629:7:0"
                      }
                    ],
                    "id": 136,
                    "name": "VariableDeclaration",
                    "src": "1629:14:0"
                  }
                ],
                "id": 137,
                "name": "ParameterList",
                "src": "1628:16:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4941191dcea6bf8c845dd7847c2031866147823b70d5b4756fcadb5e11ff70cc",
                                  "typeString": "literal_string \"no balance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "1655:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 17,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 139,
                                    "name": "Identifier",
                                    "src": "1663:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 136,
                                      "type": "address",
                                      "value": "sender"
                                    },
                                    "id": 140,
                                    "name": "Identifier",
                                    "src": "1673:6:0"
                                  }
                                ],
                                "id": 141,
                                "name": "IndexAccess",
                                "src": "1663:17:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 142,
                                "name": "Literal",
                                "src": "1683:1:0"
                              }
                            ],
                            "id": 143,
                            "name": "BinaryOperation",
                            "src": "1663:21:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6e6f2062616c616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"no balance\"",
                              "value": "no balance"
                            },
                            "id": 144,
                            "name": "Literal",
                            "src": "1686:12:0"
                          }
                        ],
                        "id": 145,
                        "name": "FunctionCall",
                        "src": "1655:44:0"
                      }
                    ],
                    "id": 146,
                    "name": "ExpressionStatement",
                    "src": "1655:44:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1d2edf4dd8e6aa1bf67f1d0bd29fb4608fdb0e612e5d76ebe6b3fa144c73bb6f",
                                  "typeString": "literal_string \"min wait blocks not met\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 147,
                            "name": "Identifier",
                            "src": "1709:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 1690,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "number",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967292,
                                              "type": "block",
                                              "value": "block"
                                            },
                                            "id": 148,
                                            "name": "Identifier",
                                            "src": "1717:5:0"
                                          }
                                        ],
                                        "id": 149,
                                        "name": "MemberAccess",
                                        "src": "1717:12:0"
                                      }
                                    ],
                                    "id": 150,
                                    "name": "MemberAccess",
                                    "src": "1717:16:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 21,
                                          "type": "mapping(address => uint256)",
                                          "value": "_depositBlocks"
                                        },
                                        "id": 151,
                                        "name": "Identifier",
                                        "src": "1734:14:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 136,
                                          "type": "address",
                                          "value": "sender"
                                        },
                                        "id": 152,
                                        "name": "Identifier",
                                        "src": "1749:6:0"
                                      }
                                    ],
                                    "id": 153,
                                    "name": "IndexAccess",
                                    "src": "1734:22:0"
                                  }
                                ],
                                "id": 154,
                                "name": "FunctionCall",
                                "src": "1717:40:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "uint256",
                                  "value": "MINIMUM_WAIT_BLOCKS"
                                },
                                "id": 155,
                                "name": "Identifier",
                                "src": "1761:19:0"
                              }
                            ],
                            "id": 156,
                            "name": "BinaryOperation",
                            "src": "1717:63:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6d696e207761697420626c6f636b73206e6f74206d6574",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"min wait blocks not met\"",
                              "value": "min wait blocks not met"
                            },
                            "id": 157,
                            "name": "Literal",
                            "src": "1782:25:0"
                          }
                        ],
                        "id": 158,
                        "name": "FunctionCall",
                        "src": "1709:99:0"
                      }
                    ],
                    "id": 159,
                    "name": "ExpressionStatement",
                    "src": "1709:99:0"
                  },
                  {
                    "id": 160,
                    "name": "PlaceholderStatement",
                    "src": "1818:1:0"
                  }
                ],
                "id": 161,
                "name": "Block",
                "src": "1645:181:0"
              }
            ],
            "id": 162,
            "name": "ModifierDefinition",
            "src": "1608:218:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                367
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "_processWithdraw",
              "scope": 215,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 169,
                "name": "OverrideSpecifier",
                "src": "1919:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_recipient",
                      "scope": 188,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 163,
                        "name": "ElementaryTypeName",
                        "src": "1858:15:0"
                      }
                    ],
                    "id": 164,
                    "name": "VariableDeclaration",
                    "src": "1858:26:0"
                  }
                ],
                "id": 165,
                "name": "ParameterList",
                "src": "1857:28:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 170,
                "name": "ParameterList",
                "src": "1929:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 162,
                      "type": "modifier (address)",
                      "value": "canWithdraw"
                    },
                    "id": 166,
                    "name": "Identifier",
                    "src": "1886:11:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 164,
                      "type": "address payable",
                      "value": "_recipient"
                    },
                    "id": 167,
                    "name": "Identifier",
                    "src": "1898:10:0"
                  }
                ],
                "id": 168,
                "name": "ModifierInvocation",
                "src": "1886:23:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        172,
                        null
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 187,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 171,
                            "name": "ElementaryTypeName",
                            "src": "1940:4:0"
                          }
                        ],
                        "id": 172,
                        "name": "VariableDeclaration",
                        "src": "1940:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple(bool,bytes memory)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function (bytes memory) payable returns (bool,bytes memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "call",
                                  "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "address payable",
                                      "value": "_recipient"
                                    },
                                    "id": 173,
                                    "name": "Identifier",
                                    "src": "1958:10:0"
                                  }
                                ],
                                "id": 174,
                                "name": "MemberAccess",
                                "src": "1958:15:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 17,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 175,
                                    "name": "Identifier",
                                    "src": "1982:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "address payable",
                                      "value": "_recipient"
                                    },
                                    "id": 176,
                                    "name": "Identifier",
                                    "src": "1992:10:0"
                                  }
                                ],
                                "id": 177,
                                "name": "IndexAccess",
                                "src": "1982:21:0"
                              }
                            ],
                            "id": 178,
                            "name": "FunctionCallOptions",
                            "src": "1958:47:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 179,
                            "name": "Literal",
                            "src": "2006:2:0"
                          }
                        ],
                        "id": 180,
                        "name": "FunctionCall",
                        "src": "1958:51:0"
                      }
                    ],
                    "id": 181,
                    "name": "VariableDeclarationStatement",
                    "src": "1939:70:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                                  "typeString": "literal_string \"payment to _recipient did not go thru\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 182,
                            "name": "Identifier",
                            "src": "2019:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 172,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 183,
                            "name": "Identifier",
                            "src": "2027:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"payment to _recipient did not go thru\"",
                              "value": "payment to _recipient did not go thru"
                            },
                            "id": 184,
                            "name": "Literal",
                            "src": "2036:39:0"
                          }
                        ],
                        "id": 185,
                        "name": "FunctionCall",
                        "src": "2019:57:0"
                      }
                    ],
                    "id": 186,
                    "name": "ExpressionStatement",
                    "src": "2019:57:0"
                  }
                ],
                "id": 187,
                "name": "Block",
                "src": "1929:154:0"
              }
            ],
            "id": 188,
            "name": "FunctionDefinition",
            "src": "1832:251:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                439
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_processMint",
              "scope": 215,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 196,
                "name": "OverrideSpecifier",
                "src": "2218:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_recipient",
                      "scope": 214,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 189,
                        "name": "ElementaryTypeName",
                        "src": "2120:15:0"
                      }
                    ],
                    "id": 190,
                    "name": "VariableDeclaration",
                    "src": "2120:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_relayer",
                      "scope": 214,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 191,
                        "name": "ElementaryTypeName",
                        "src": "2156:15:0"
                      }
                    ],
                    "id": 192,
                    "name": "VariableDeclaration",
                    "src": "2156:24:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_fee",
                      "scope": 214,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 193,
                        "name": "ElementaryTypeName",
                        "src": "2190:7:0"
                      }
                    ],
                    "id": 194,
                    "name": "VariableDeclaration",
                    "src": "2190:12:0"
                  }
                ],
                "id": 195,
                "name": "ParameterList",
                "src": "2110:98:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 197,
                "name": "ParameterList",
                "src": "2227:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                                  "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 198,
                            "name": "Identifier",
                            "src": "2262:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 199,
                                    "name": "Identifier",
                                    "src": "2270:3:0"
                                  }
                                ],
                                "id": 200,
                                "name": "MemberAccess",
                                "src": "2270:9:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 201,
                                "name": "Literal",
                                "src": "2283:1:0"
                              }
                            ],
                            "id": 202,
                            "name": "BinaryOperation",
                            "src": "2270:14:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Message value is supposed to be zero for ETH instance\"",
                              "value": "Message value is supposed to be zero for ETH instance"
                            },
                            "id": 203,
                            "name": "Literal",
                            "src": "2286:55:0"
                          }
                        ],
                        "id": 204,
                        "name": "FunctionCall",
                        "src": "2262:80:0"
                      }
                    ],
                    "id": 205,
                    "name": "ExpressionStatement",
                    "src": "2262:80:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "awardNFT",
                              "referencedDeclaration": 622,
                              "type": "function (address) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "contract FlexNFT",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 638,
                                      "type": "type(contract FlexNFT)",
                                      "value": "FlexNFT"
                                    },
                                    "id": 206,
                                    "name": "Identifier",
                                    "src": "2376:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13,
                                      "type": "address",
                                      "value": "flexNFTContract"
                                    },
                                    "id": 207,
                                    "name": "Identifier",
                                    "src": "2384:15:0"
                                  }
                                ],
                                "id": 208,
                                "name": "FunctionCall",
                                "src": "2376:24:0"
                              }
                            ],
                            "id": 209,
                            "name": "MemberAccess",
                            "src": "2376:33:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 190,
                              "type": "address payable",
                              "value": "_recipient"
                            },
                            "id": 210,
                            "name": "Identifier",
                            "src": "2410:10:0"
                          }
                        ],
                        "id": 211,
                        "name": "FunctionCall",
                        "src": "2376:45:0"
                      }
                    ],
                    "id": 212,
                    "name": "ExpressionStatement",
                    "src": "2376:45:0"
                  }
                ],
                "id": 213,
                "name": "Block",
                "src": "2227:373:0"
              }
            ],
            "id": 214,
            "name": "FunctionDefinition",
            "src": "2089:511:0"
          }
        ],
        "id": 215,
        "name": "ContractDefinition",
        "src": "159:2443:0"
      }
    ],
    "id": 216,
    "name": "SourceUnit",
    "src": "32:2571:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "1651590632707": {
      "events": {},
      "links": {},
      "address": "0x4dc57eB9FD746E31eaD1468679BE207d09FF69a6",
      "transactionHash": "0x3e19021683099d70e7f1e4a01752aacb711e70d19a376ef5ce8f4fa02c3fdd99"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-05-03T16:42:36.046Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(bytes32)": {
        "details": "Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.",
        "params": {
          "_commitment": "the note commitment, which is PedersenHash(nullifier + secret)"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "mintNFT(bytes,bytes32,bytes32,address,address,uint256,uint256)": {
        "details": "mintNFT mints flex NFT from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)"
      },
      "withdraw()": {
        "details": "Withdraw a deposit from the contract. A wait time is enforced to prevent flash loans. "
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}